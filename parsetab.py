
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNEGATIONleftOPERATORleftARITHMETIC_OPALL AND ARITHMETIC_OP ARRAY BOOLEAN COMMA FOR IDENTIFIER IN LPAREN NEGATION NEXT NOOPTIMIZE NUMBER OPERATOR OR RECORD REST RPAREN STRING SUM TO WHILEcommand : SUM expression_list_opt scope_opt for_opt while_opt to_opt nooptimize_optexpression_list_opt : expression_list\n                           | emptyexpression_list : expression\n                       | expression COMMA expression_listscope_opt : ALL\n                 | NEXT NUMBER\n                 | RECORD NUMBER\n                 | REST\n                 | emptyfor_opt : FOR expression\n               | emptywhile_opt : WHILE expression\n                 | emptyto_opt : TO memvar_list\n              | TO ARRAY IDENTIFIER\n              | emptymemvar_list : IDENTIFIER\n                   | IDENTIFIER COMMA memvar_listnooptimize_opt : NOOPTIMIZE\n                      | emptyvalue : NUMBER\n             | STRING\n             | BOOLEAN\n             | IDENTIFIERexpression : expression AND expression\n                  | expression OR expression\n                  | expression ARITHMETIC_OP expression\n                  | expression OPERATOR expression\n                  | NEGATION expression\n                  | LPAREN expression RPAREN\n                  | valueempty :'
    
_lr_action_items = {'SUM':([0,],[2,]),'$end':([1,2,3,4,5,6,9,10,11,12,13,14,15,18,19,25,27,29,30,31,32,33,34,35,36,37,38,40,41,42,44,45,46,47,48,49,51,52,54,],[0,-33,-33,-2,-3,-4,-32,-22,-23,-24,-25,-33,-6,-9,-10,-30,-33,-12,-7,-8,-5,-26,-27,-28,-29,-31,-33,-14,-11,-33,-17,-13,-1,-20,-21,-15,-18,-16,-19,]),'ALL':([2,3,4,5,6,9,10,11,12,13,25,32,33,34,35,36,37,],[-33,15,-2,-3,-4,-32,-22,-23,-24,-25,-30,-5,-26,-27,-28,-29,-31,]),'NEXT':([2,3,4,5,6,9,10,11,12,13,25,32,33,34,35,36,37,],[-33,16,-2,-3,-4,-32,-22,-23,-24,-25,-30,-5,-26,-27,-28,-29,-31,]),'RECORD':([2,3,4,5,6,9,10,11,12,13,25,32,33,34,35,36,37,],[-33,17,-2,-3,-4,-32,-22,-23,-24,-25,-30,-5,-26,-27,-28,-29,-31,]),'REST':([2,3,4,5,6,9,10,11,12,13,25,32,33,34,35,36,37,],[-33,18,-2,-3,-4,-32,-22,-23,-24,-25,-30,-5,-26,-27,-28,-29,-31,]),'FOR':([2,3,4,5,6,9,10,11,12,13,14,15,18,19,25,30,31,32,33,34,35,36,37,],[-33,-33,-2,-3,-4,-32,-22,-23,-24,-25,28,-6,-9,-10,-30,-7,-8,-5,-26,-27,-28,-29,-31,]),'WHILE':([2,3,4,5,6,9,10,11,12,13,14,15,18,19,25,27,29,30,31,32,33,34,35,36,37,41,],[-33,-33,-2,-3,-4,-32,-22,-23,-24,-25,-33,-6,-9,-10,-30,39,-12,-7,-8,-5,-26,-27,-28,-29,-31,-11,]),'TO':([2,3,4,5,6,9,10,11,12,13,14,15,18,19,25,27,29,30,31,32,33,34,35,36,37,38,40,41,45,],[-33,-33,-2,-3,-4,-32,-22,-23,-24,-25,-33,-6,-9,-10,-30,-33,-12,-7,-8,-5,-26,-27,-28,-29,-31,43,-14,-11,-13,]),'NOOPTIMIZE':([2,3,4,5,6,9,10,11,12,13,14,15,18,19,25,27,29,30,31,32,33,34,35,36,37,38,40,41,42,44,45,49,51,52,54,],[-33,-33,-2,-3,-4,-32,-22,-23,-24,-25,-33,-6,-9,-10,-30,-33,-12,-7,-8,-5,-26,-27,-28,-29,-31,-33,-14,-11,47,-17,-13,-15,-18,-16,-19,]),'NEGATION':([2,7,8,20,21,22,23,24,28,39,],[7,7,7,7,7,7,7,7,7,7,]),'LPAREN':([2,7,8,20,21,22,23,24,28,39,],[8,8,8,8,8,8,8,8,8,8,]),'NUMBER':([2,7,8,16,17,20,21,22,23,24,28,39,],[10,10,10,30,31,10,10,10,10,10,10,10,]),'STRING':([2,7,8,20,21,22,23,24,28,39,],[11,11,11,11,11,11,11,11,11,11,]),'BOOLEAN':([2,7,8,20,21,22,23,24,28,39,],[12,12,12,12,12,12,12,12,12,12,]),'IDENTIFIER':([2,7,8,20,21,22,23,24,28,39,43,50,53,],[13,13,13,13,13,13,13,13,13,13,51,52,51,]),'COMMA':([6,9,10,11,12,13,25,33,34,35,36,37,51,],[20,-32,-22,-23,-24,-25,-30,-26,-27,-28,-29,-31,53,]),'AND':([6,9,10,11,12,13,25,26,33,34,35,36,37,41,45,],[21,-32,-22,-23,-24,-25,-30,21,-26,21,-28,-29,-31,21,21,]),'OR':([6,9,10,11,12,13,25,26,33,34,35,36,37,41,45,],[22,-32,-22,-23,-24,-25,-30,22,-26,-27,-28,-29,-31,22,22,]),'ARITHMETIC_OP':([6,9,10,11,12,13,25,26,33,34,35,36,37,41,45,],[23,-32,-22,-23,-24,-25,23,23,23,23,-28,23,-31,23,23,]),'OPERATOR':([6,9,10,11,12,13,25,26,33,34,35,36,37,41,45,],[24,-32,-22,-23,-24,-25,24,24,24,24,-28,-29,-31,24,24,]),'RPAREN':([9,10,11,12,13,25,26,33,34,35,36,37,],[-32,-22,-23,-24,-25,-30,37,-26,-27,-28,-29,-31,]),'ARRAY':([43,],[50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'command':([0,],[1,]),'expression_list_opt':([2,],[3,]),'expression_list':([2,20,],[4,32,]),'empty':([2,3,14,27,38,42,],[5,19,29,40,44,48,]),'expression':([2,7,8,20,21,22,23,24,28,39,],[6,25,26,6,33,34,35,36,41,45,]),'value':([2,7,8,20,21,22,23,24,28,39,],[9,9,9,9,9,9,9,9,9,9,]),'scope_opt':([3,],[14,]),'for_opt':([14,],[27,]),'while_opt':([27,],[38,]),'to_opt':([38,],[42,]),'nooptimize_opt':([42,],[46,]),'memvar_list':([43,53,],[49,54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> command","S'",1,None,None,None),
  ('command -> SUM expression_list_opt scope_opt for_opt while_opt to_opt nooptimize_opt','command',7,'p_command','mat2.py',95),
  ('expression_list_opt -> expression_list','expression_list_opt',1,'p_expression_list_opt','mat2.py',109),
  ('expression_list_opt -> empty','expression_list_opt',1,'p_expression_list_opt','mat2.py',110),
  ('expression_list -> expression','expression_list',1,'p_expression_list','mat2.py',114),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','mat2.py',115),
  ('scope_opt -> ALL','scope_opt',1,'p_scope_opt','mat2.py',122),
  ('scope_opt -> NEXT NUMBER','scope_opt',2,'p_scope_opt','mat2.py',123),
  ('scope_opt -> RECORD NUMBER','scope_opt',2,'p_scope_opt','mat2.py',124),
  ('scope_opt -> REST','scope_opt',1,'p_scope_opt','mat2.py',125),
  ('scope_opt -> empty','scope_opt',1,'p_scope_opt','mat2.py',126),
  ('for_opt -> FOR expression','for_opt',2,'p_for_opt','mat2.py',139),
  ('for_opt -> empty','for_opt',1,'p_for_opt','mat2.py',140),
  ('while_opt -> WHILE expression','while_opt',2,'p_while_opt','mat2.py',144),
  ('while_opt -> empty','while_opt',1,'p_while_opt','mat2.py',145),
  ('to_opt -> TO memvar_list','to_opt',2,'p_to_opt','mat2.py',149),
  ('to_opt -> TO ARRAY IDENTIFIER','to_opt',3,'p_to_opt','mat2.py',150),
  ('to_opt -> empty','to_opt',1,'p_to_opt','mat2.py',151),
  ('memvar_list -> IDENTIFIER','memvar_list',1,'p_memvar_list','mat2.py',160),
  ('memvar_list -> IDENTIFIER COMMA memvar_list','memvar_list',3,'p_memvar_list','mat2.py',161),
  ('nooptimize_opt -> NOOPTIMIZE','nooptimize_opt',1,'p_nooptimize_opt','mat2.py',168),
  ('nooptimize_opt -> empty','nooptimize_opt',1,'p_nooptimize_opt','mat2.py',169),
  ('value -> NUMBER','value',1,'p_value','mat2.py',173),
  ('value -> STRING','value',1,'p_value','mat2.py',174),
  ('value -> BOOLEAN','value',1,'p_value','mat2.py',175),
  ('value -> IDENTIFIER','value',1,'p_value','mat2.py',176),
  ('expression -> expression AND expression','expression',3,'p_expression','mat2.py',186),
  ('expression -> expression OR expression','expression',3,'p_expression','mat2.py',187),
  ('expression -> expression ARITHMETIC_OP expression','expression',3,'p_expression','mat2.py',188),
  ('expression -> expression OPERATOR expression','expression',3,'p_expression','mat2.py',189),
  ('expression -> NEGATION expression','expression',2,'p_expression','mat2.py',190),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','mat2.py',191),
  ('expression -> value','expression',1,'p_expression','mat2.py',192),
  ('empty -> <empty>','empty',0,'p_empty','mat2.py',217),
]
